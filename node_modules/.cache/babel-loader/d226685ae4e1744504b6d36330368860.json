{"ast":null,"code":"var _jsxFileName = \"/Users/chlee/test/src/components/utils/Button.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport function Button(props) {\n  console.log(\"##Button##\", props.data);\n  let value;\n  let className;\n  let paramId = props.data.id; //unable이어도 booktigerId는 존재하기 때문에 초기 설정.\n\n  if (props.active === false) {\n    value = \"대출불가\";\n    className = \"unable_checkout\";\n  } else if (!props.checkout) // active true & 대여사항이 없다? -> 대여가능\n    {\n      value = \"대출하기\";\n      className = \"checkout\";\n    } else {\n    value = \"반납하기\";\n    className = \"checkin\";\n    paramId = props.checkout.id;\n  }\n\n  return (\n    /*#__PURE__*/\n    //대출하기 / 반납하기 버튼 누르는건데 여기서도 props 받아야 하지 않니..?\n    //props를 match.state로 할 수 있나..\n    React.createElement(Link, {\n      to: {\n        pathname: `/${className}/${paramId}`,\n        state: {\n          data: props.data\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      class: className,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }))\n  );\n}\nexport default Button;","map":{"version":3,"sources":["/Users/chlee/test/src/components/utils/Button.js"],"names":["React","Link","Button","props","console","log","data","value","className","paramId","id","active","checkout","pathname","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EACP;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAAK,CAACG,IAAhC;AACA,MAAIC,KAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,OAAO,GAAGN,KAAK,CAACG,IAAN,CAAWI,EAAzB,CAJD,CAI8B;;AAC7B,MAAIP,KAAK,CAACQ,MAAN,KAAiB,KAArB,EACA;AACCJ,IAAAA,KAAK,GAAG,MAAR;AACAC,IAAAA,SAAS,GAAG,iBAAZ;AACA,GAJD,MAKK,IAAI,CAACL,KAAK,CAACS,QAAX,EAAqB;AAC1B;AACCL,MAAAA,KAAK,GAAG,MAAR;AACAC,MAAAA,SAAS,GAAG,UAAZ;AACA,KAJI,MAKD;AACHD,IAAAA,KAAK,GAAG,MAAR;AACAC,IAAAA,SAAS,GAAG,SAAZ;AACAC,IAAAA,OAAO,GAAGN,KAAK,CAACS,QAAN,CAAeF,EAAzB;AACA;;AACD;AAAA;AACC;AACA;AACA,wBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACTG,QAAAA,QAAQ,EAAI,IAAGL,SAAU,IAAGC,OAAQ,EAD3B;AAETK,QAAAA,KAAK,EAAG;AACPR,UAAAA,IAAI,EAAEH,KAAK,CAACG;AADL;AAFC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMC;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEE,SAA5B;AAAuC,MAAA,KAAK,EAAID,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND;AAHD;AAYA;AAED,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport function Button(props)\n{\n\tconsole.log(\"##Button##\", props.data);\n\tlet value;\n\tlet className;\n\tlet paramId = props.data.id; //unable이어도 booktigerId는 존재하기 때문에 초기 설정.\n\tif (props.active === false)\n\t{\n\t\tvalue = \"대출불가\";\n\t\tclassName = \"unable_checkout\";\n\t}\n\telse if (!props.checkout) // active true & 대여사항이 없다? -> 대여가능\n\t{\n\t\tvalue = \"대출하기\";\n\t\tclassName = \"checkout\";\n\t}\n\telse{ \n\t\tvalue = \"반납하기\";\n\t\tclassName = \"checkin\";\n\t\tparamId = props.checkout.id;\n\t}\n\treturn (\n\t\t//대출하기 / 반납하기 버튼 누르는건데 여기서도 props 받아야 하지 않니..?\n\t\t//props를 match.state로 할 수 있나..\n\t\t<Link to={{\n\t\t\tpathname : `/${className}/${paramId}`,\n\t\t\tstate : {\n\t\t\t\tdata: props.data\n\t\t\t}\n\t\t}}>\n\t\t\t<input type=\"submit\" class={className} value = {value}/>\n\t\t</Link>\n\t);\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}